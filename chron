#!/usr/bin/env python

# Chronologicon v4.0
# Rutherford Craze
# https://craze.co.uk
# 181017

# Tracks time

import argparse
from time import time
import chron_preferences

M_PREFS = chron_preferences.CHRON_PREFS
# with open('chron_preferences.py', 'r') as PREFS_FILE:
# 	M_PREFS = PREFS_FILE

CUR_LOG = {
	'TIME_START':0,
	'TIME_END':0,
	'TIME_LENGTH':0,

	'DISC':"",
	'PROJ':"",
	'NOTE':""
}

def WritePrefs():
	with open('chron_preferences.py', 'w') as PREFS_FILE:
		PREFS_FILE.write("CHRON_PREFS = " + repr(M_PREFS))

def PreSave():
	with open('chron_presave.py', 'w') as PRESAVE_FILE:
		PRESAVE_FILE.write("CUR_LOG = " + repr(CUR_LOG))

# Commands:
# start (-s): Starts a new log
# stop (-x): Ends and commits the current log
# directory (-d): Sets/resets chron's save directory

parser = argparse.ArgumentParser(description="A minimal time tracker.", prog="chron")
parser.add_argument("-s", "--start", nargs="*", help="Start a new log.")
parser.add_argument("-x", "--stop", action="store_true", help="Complete the current log.")
parser.add_argument("-d", "--directory", nargs=1, help="Change the current save directory.")

args = parser.parse_args()

# Change save directory.
if args.directory:
	M_PREFS['save_directory'] = args.directory[0]
	WritePrefs()
	print("Updated preferences.")

# Complete and store the current log.
if args.stop:
	print("Stopping log.")

# Start a new log and presave in case of crash.
if args.start:
	if(len(args.start) < 2):
		print("Not enough arguments.")
	else:
		CUR_LOG['TIME_START'] = time()
		CUR_LOG['DISC'] = args.start[0]
		CUR_LOG['PROJ'] = args.start[1]
		if len(args.start) == 3:
			CUR_LOG['NOTE'] = args.start[2]
		PreSave()